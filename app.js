var http = require('http');var path = require('path');var express = require('express');var app = module.exports = express();var engine = require('ejs-locals');var cradle = require('cradle');var util = require('util');var products = require('./products_repository');app.configure(function() {	// use ejs-locals for all ejs templates	app.engine('ejs', engine);	app.set('port', process.env.PORT || 3000);	app.set('views', __dirname + '/views');	app.set('view engine', 'ejs');		// app.router should go before cookieParser()	app.use(app.router);	app.use(express.favicon());	app.use(express.logger('dev'));	app.use(express.bodyParser());	app.use(express.cookieParser());	app.use(express.methodOverride());		app.use(express.static(path.join(__dirname, '/public')));	app.use(express.errorHandler({		dumpExceptions: true, showStack: true	}));});app.get('/', function(req, res) {	res.render('index', {title: 'Fooding', message: 'Fooding'});});app.get('/products/list', function(req, res) {	res.render('products', {title: 'Fooding : Products', message: 'Products'});});app.get('/products/add', function(req, res) {	res.render('productsadd', {		title: 'New Product',		message: 'New Product',		legend: 'New Product',		saveText: 'Add Product'	});});app.get('/dishes/list', function(req, res) {	res.render('dishes', {title: 'Fooding : Dishes', message: 'Dishes', warn: 'to be updated'});});app.get('/dev', function(req,res) {	res.render('dev', {title:'Development & Administration'});});// apiapp.get('/api/products/list/', function(req, res) {	products.all(function(err, response) {		if (err) {			res.json(JSON.stringify(err));		} else if (response) {			res.json(JSON.stringify(response));		}	});});app.get('/api/products/list/:limit/:skip', function(req, res) {});app.get('/api/products/get/:id', function(req, res) {	var id = req.params.id;});app.post('/api/products/add', function(req, res) {		products.save({		name: req.body.name,		price: req.body.price	}, function(err, response) {		if (err) {							res.json(JSON.stringify(err));		} else if (response) {			res.json(JSON.stringify(response));		}	});});app.post('/api/products/update', function(req, res) {});app.post('/api/products/delete', function(req, res) {});// Database view creationsapp.get('/dev/products/all', function(req, res) {	var db = dbinit.connect('products');	db.save('_design/products', {		all: {			map: function(doc) {				if (doc.name && doc.price) {					emit(doc._id, {id: doc._id, rev: doc._rev, name: doc.name, price: doc.price});				}			}		}	}, function(err, response) {		if (err) {			res.json(err)		}					if (response) {			res.json(response);		}	});});http.createServer(app).listen(app.get('port'), function() {	console.log("Express server listening on port " + app.get('port'));});